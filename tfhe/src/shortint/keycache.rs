use crate::keycache::utils::named_params_impl;
use crate::keycache::*;
use crate::shortint::parameters::bc::*;
use crate::shortint::parameters::classic::compact_pk::*;
#[cfg(tarpaulin)]
use crate::shortint::parameters::coverage_parameters::*;
use crate::shortint::parameters::key_switching::*;
use crate::shortint::parameters::multi_bit::*;
use crate::shortint::parameters::parameters_wopbs::*;
use crate::shortint::parameters::*;
use crate::shortint::wopbs::WopbsKey;
use crate::shortint::{ClientKey, KeySwitchingKey, ServerKey};
use lazy_static::*;
use serde::{Deserialize, Serialize};

named_params_impl!( ShortintParameterSet =>
    PARAM_MESSAGE_1_CARRY_0_KS_PBS,
    PARAM_MESSAGE_1_CARRY_1_KS_PBS,
    PARAM_MESSAGE_1_CARRY_2_KS_PBS,
    PARAM_MESSAGE_1_CARRY_3_KS_PBS,
    PARAM_MESSAGE_1_CARRY_4_KS_PBS,
    PARAM_MESSAGE_1_CARRY_5_KS_PBS,
    PARAM_MESSAGE_1_CARRY_6_KS_PBS,
    PARAM_MESSAGE_1_CARRY_7_KS_PBS,
    PARAM_MESSAGE_2_CARRY_0_KS_PBS,
    PARAM_MESSAGE_2_CARRY_1_KS_PBS,
    PARAM_MESSAGE_2_CARRY_2_KS_PBS,
    PARAM_MESSAGE_2_CARRY_3_KS_PBS,
    PARAM_MESSAGE_2_CARRY_4_KS_PBS,
    PARAM_MESSAGE_2_CARRY_5_KS_PBS,
    PARAM_MESSAGE_2_CARRY_6_KS_PBS,
    PARAM_MESSAGE_3_CARRY_0_KS_PBS,
    PARAM_MESSAGE_3_CARRY_1_KS_PBS,
    PARAM_MESSAGE_3_CARRY_2_KS_PBS,
    PARAM_MESSAGE_3_CARRY_3_KS_PBS,
    PARAM_MESSAGE_3_CARRY_4_KS_PBS,
    PARAM_MESSAGE_3_CARRY_5_KS_PBS,
    PARAM_MESSAGE_4_CARRY_0_KS_PBS,
    PARAM_MESSAGE_4_CARRY_1_KS_PBS,
    PARAM_MESSAGE_4_CARRY_2_KS_PBS,
    PARAM_MESSAGE_4_CARRY_3_KS_PBS,
    PARAM_MESSAGE_4_CARRY_4_KS_PBS,
    PARAM_MESSAGE_5_CARRY_0_KS_PBS,
    PARAM_MESSAGE_5_CARRY_1_KS_PBS,
    PARAM_MESSAGE_5_CARRY_2_KS_PBS,
    PARAM_MESSAGE_5_CARRY_3_KS_PBS,
    PARAM_MESSAGE_6_CARRY_0_KS_PBS,
    PARAM_MESSAGE_6_CARRY_1_KS_PBS,
    PARAM_MESSAGE_6_CARRY_2_KS_PBS,
    PARAM_MESSAGE_7_CARRY_0_KS_PBS,
    PARAM_MESSAGE_7_CARRY_1_KS_PBS,
    PARAM_MESSAGE_8_CARRY_0_KS_PBS,
    // Small
    PARAM_MESSAGE_1_CARRY_1_PBS_KS,
    PARAM_MESSAGE_2_CARRY_2_PBS_KS,
    PARAM_MESSAGE_3_CARRY_3_PBS_KS,
    PARAM_MESSAGE_4_CARRY_4_PBS_KS,
    // MultiBit Group 2
    PARAM_MULTI_BIT_MESSAGE_1_CARRY_1_GROUP_2_KS_PBS,
    PARAM_MULTI_BIT_MESSAGE_2_CARRY_2_GROUP_2_KS_PBS,
    PARAM_MULTI_BIT_MESSAGE_3_CARRY_3_GROUP_2_KS_PBS,
    // MultiBit Group 3
    PARAM_MULTI_BIT_MESSAGE_1_CARRY_1_GROUP_3_KS_PBS,
    PARAM_MULTI_BIT_MESSAGE_2_CARRY_2_GROUP_3_KS_PBS,
    PARAM_MULTI_BIT_MESSAGE_3_CARRY_3_GROUP_3_KS_PBS,
    // MultiBit Group 2 GPU
    PARAM_GPU_MULTI_BIT_MESSAGE_1_CARRY_1_GROUP_2_KS_PBS,
    PARAM_GPU_MULTI_BIT_MESSAGE_2_CARRY_2_GROUP_2_KS_PBS,
    PARAM_GPU_MULTI_BIT_MESSAGE_3_CARRY_3_GROUP_2_KS_PBS,
    // MultiBit Group 3 GPU
    PARAM_GPU_MULTI_BIT_MESSAGE_1_CARRY_1_GROUP_3_KS_PBS,
    PARAM_GPU_MULTI_BIT_MESSAGE_2_CARRY_2_GROUP_3_KS_PBS,
    PARAM_GPU_MULTI_BIT_MESSAGE_3_CARRY_3_GROUP_3_KS_PBS,
    // CPK
    PARAM_MESSAGE_1_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_3_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_4_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_5_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_6_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_1_CARRY_7_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_3_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_4_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_5_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_2_CARRY_6_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_3_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_3_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_3_CARRY_3_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_3_CARRY_4_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_3_CARRY_5_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_4_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_4_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_4_CARRY_3_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_4_CARRY_4_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_5_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_5_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_5_CARRY_3_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_6_CARRY_1_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_6_CARRY_2_COMPACT_PK_KS_PBS,
    PARAM_MESSAGE_7_CARRY_1_COMPACT_PK_KS_PBS,
    // CPK SMALL
    PARAM_MESSAGE_1_CARRY_1_COMPACT_PK_PBS_KS,
    PARAM_MESSAGE_2_CARRY_2_COMPACT_PK_PBS_KS,
    PARAM_MESSAGE_3_CARRY_3_COMPACT_PK_PBS_KS,
    PARAM_MESSAGE_4_CARRY_4_COMPACT_PK_PBS_KS,
    // Wopbs
    WOPBS_PARAM_MESSAGE_1_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_3_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_4_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_5_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_6_KS_PBS,
    WOPBS_PARAM_MESSAGE_1_CARRY_7_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_3_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_4_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_5_KS_PBS,
    WOPBS_PARAM_MESSAGE_2_CARRY_6_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_3_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_4_KS_PBS,
    WOPBS_PARAM_MESSAGE_3_CARRY_5_KS_PBS,
    WOPBS_PARAM_MESSAGE_4_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_4_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_4_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_4_CARRY_3_KS_PBS,
    WOPBS_PARAM_MESSAGE_4_CARRY_4_KS_PBS,
    WOPBS_PARAM_MESSAGE_5_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_5_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_5_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_5_CARRY_3_KS_PBS,
    WOPBS_PARAM_MESSAGE_6_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_6_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_6_CARRY_2_KS_PBS,
    WOPBS_PARAM_MESSAGE_7_CARRY_0_KS_PBS,
    WOPBS_PARAM_MESSAGE_7_CARRY_1_KS_PBS,
    WOPBS_PARAM_MESSAGE_8_CARRY_0_KS_PBS,
    // Wopbs only
    WOPBS_ONLY_8_BLOCKS_PARAM_MESSAGE_1_CARRY_0_KS_PBS,
    WOPBS_ONLY_8_BLOCKS_PARAM_MESSAGE_1_CARRY_1_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_1_CARRY_2_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_1_CARRY_3_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_1_CARRY_4_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_1_CARRY_5_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_1_CARRY_6_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_1_CARRY_7_KS_PBS,
    WOPBS_ONLY_8_BLOCKS_PARAM_MESSAGE_2_CARRY_0_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_2_CARRY_1_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_2_CARRY_2_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_2_CARRY_3_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_2_CARRY_4_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_2_CARRY_5_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_2_CARRY_6_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_3_CARRY_0_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_3_CARRY_1_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_3_CARRY_2_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_3_CARRY_3_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_3_CARRY_4_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_3_CARRY_5_KS_PBS,
    WOPBS_ONLY_4_BLOCKS_PARAM_MESSAGE_4_CARRY_0_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_4_CARRY_1_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_4_CARRY_2_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_4_CARRY_3_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_4_CARRY_4_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_5_CARRY_0_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_5_CARRY_1_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_5_CARRY_2_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_5_CARRY_3_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_6_CARRY_0_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_6_CARRY_1_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_6_CARRY_2_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_7_CARRY_0_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_7_CARRY_1_KS_PBS,
    WOPBS_ONLY_2_BLOCKS_PARAM_MESSAGE_8_CARRY_0_KS_PBS,
    // PKE BC
    PARAM_PKE_MESSAGE_1_CARRY_1_128_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_128_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_128_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_128_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_128_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_128_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_128_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_128_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_129_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_129_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_129_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_129_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_129_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_129_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_129_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_129_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_130_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_130_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_130_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_130_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_130_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_130_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_130_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_130_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_131_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_131_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_131_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_131_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_131_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_131_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_131_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_131_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_132_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_132_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_132_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_132_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_132_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_132_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_132_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_132_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_133_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_133_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_133_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_133_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_133_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_133_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_133_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_133_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_134_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_134_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_134_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_134_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_134_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_134_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_134_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_134_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_135_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_135_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_135_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_135_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_135_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_135_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_135_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_135_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_136_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_136_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_136_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_136_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_136_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_136_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_136_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_136_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_137_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_137_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_137_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_137_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_137_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_137_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_137_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_137_128,
    PARAM_PKE_MESSAGE_1_CARRY_1_138_40,
    PARAM_FHE_MESSAGE_1_CARRY_1_138_40,
    PARAM_PKE_MESSAGE_1_CARRY_1_138_64,
    PARAM_FHE_MESSAGE_1_CARRY_1_138_64,
    PARAM_PKE_MESSAGE_1_CARRY_1_138_80,
    PARAM_FHE_MESSAGE_1_CARRY_1_138_80,
    PARAM_PKE_MESSAGE_1_CARRY_1_138_128,
    PARAM_FHE_MESSAGE_1_CARRY_1_138_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_128_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_128_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_128_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_128_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_128_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_128_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_128_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_128_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_129_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_129_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_129_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_129_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_129_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_129_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_129_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_129_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_130_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_130_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_130_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_130_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_130_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_130_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_130_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_130_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_131_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_131_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_131_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_131_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_131_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_131_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_131_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_131_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_132_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_132_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_132_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_132_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_132_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_132_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_132_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_132_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_133_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_133_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_133_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_133_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_133_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_133_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_133_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_133_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_134_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_134_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_134_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_134_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_134_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_134_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_134_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_134_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_135_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_135_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_135_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_135_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_135_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_135_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_135_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_135_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_136_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_136_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_136_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_136_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_136_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_136_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_136_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_136_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_137_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_137_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_137_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_137_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_137_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_137_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_137_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_137_128,
    PARAM_PKE_MESSAGE_2_CARRY_2_138_40,
    PARAM_FHE_MESSAGE_2_CARRY_2_138_40,
    PARAM_PKE_MESSAGE_2_CARRY_2_138_64,
    PARAM_FHE_MESSAGE_2_CARRY_2_138_64,
    PARAM_PKE_MESSAGE_2_CARRY_2_138_80,
    PARAM_FHE_MESSAGE_2_CARRY_2_138_80,
    PARAM_PKE_MESSAGE_2_CARRY_2_138_128,
    PARAM_FHE_MESSAGE_2_CARRY_2_138_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_128_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_128_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_128_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_128_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_128_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_128_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_128_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_128_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_129_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_129_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_129_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_129_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_129_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_129_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_129_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_129_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_130_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_130_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_130_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_130_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_130_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_130_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_130_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_130_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_131_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_131_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_131_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_131_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_131_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_131_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_131_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_131_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_132_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_132_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_132_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_132_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_132_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_132_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_132_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_132_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_133_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_133_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_133_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_133_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_133_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_133_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_133_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_133_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_134_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_134_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_134_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_134_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_134_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_134_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_134_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_134_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_135_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_135_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_135_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_135_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_135_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_135_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_135_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_135_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_136_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_136_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_136_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_136_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_136_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_136_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_136_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_136_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_137_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_137_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_137_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_137_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_137_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_137_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_137_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_137_128,
    PARAM_PKE_MESSAGE_3_CARRY_3_138_40,
    PARAM_FHE_MESSAGE_3_CARRY_3_138_40,
    PARAM_PKE_MESSAGE_3_CARRY_3_138_64,
    PARAM_FHE_MESSAGE_3_CARRY_3_138_64,
    PARAM_PKE_MESSAGE_3_CARRY_3_138_80,
    PARAM_FHE_MESSAGE_3_CARRY_3_138_80,
    PARAM_PKE_MESSAGE_3_CARRY_3_138_128,
    PARAM_FHE_MESSAGE_3_CARRY_3_138_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_128_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_128_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_128_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_128_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_128_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_128_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_128_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_128_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_129_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_129_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_129_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_129_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_129_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_129_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_129_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_129_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_130_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_130_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_130_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_130_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_130_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_130_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_130_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_130_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_131_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_131_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_131_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_131_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_131_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_131_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_131_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_131_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_132_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_132_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_132_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_132_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_132_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_132_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_132_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_132_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_133_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_133_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_133_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_133_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_133_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_133_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_133_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_133_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_134_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_134_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_134_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_134_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_134_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_134_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_134_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_134_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_135_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_135_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_135_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_135_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_135_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_135_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_135_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_135_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_136_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_136_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_136_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_136_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_136_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_136_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_136_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_136_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_137_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_137_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_137_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_137_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_137_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_137_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_137_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_137_128,
    PARAM_PKE_MESSAGE_4_CARRY_4_138_40,
    PARAM_FHE_MESSAGE_4_CARRY_4_138_40,
    PARAM_PKE_MESSAGE_4_CARRY_4_138_64,
    PARAM_FHE_MESSAGE_4_CARRY_4_138_64,
    PARAM_PKE_MESSAGE_4_CARRY_4_138_80,
    PARAM_FHE_MESSAGE_4_CARRY_4_138_80,
    PARAM_PKE_MESSAGE_4_CARRY_4_138_128,
    PARAM_FHE_MESSAGE_4_CARRY_4_138_128,
    // Coverage
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MESSAGE_2_CARRY_2_KS_PBS,
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MESSAGE_2_CARRY_3_KS_PBS,
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MESSAGE_5_CARRY_1_KS_PBS,
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MULTI_BIT_MESSAGE_2_CARRY_2_GROUP_2_KS_PBS,
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MESSAGE_2_CARRY_2_COMPACT_PK_PBS_KS,
    #[cfg(tarpaulin)]
    COVERAGE_PARAM_MESSAGE_2_CARRY_2_COMPACT_PK_KS_PBS,
);

impl NamedParam for ClassicPBSParameters {
    fn name(&self) -> String {
        PBSParameters::from(*self).name()
    }
}

impl NamedParam for MultiBitPBSParameters {
    fn name(&self) -> String {
        PBSParameters::from(*self).name()
    }
}

impl NamedParam for PBSParameters {
    fn name(&self) -> String {
        ShortintParameterSet::from(*self).name()
    }
}

impl NamedParam for WopbsParameters {
    fn name(&self) -> String {
        ShortintParameterSet::from(*self).name()
    }
}

impl NamedParam for ShortintKeySwitchingParameters {
    fn name(&self) -> String {
        named_params_impl!(expose PARAM_KEYSWITCH_1_1_KS_PBS_TO_2_2_KS_PBS);
        named_params_impl!(
            {
                *self;
                Self
            } == (PARAM_KEYSWITCH_1_1_KS_PBS_TO_2_2_KS_PBS)
        );

        format!(
            "PARAM_KEYSWITCH_CUSTOM_KS_LEVEL_{}_KS_BASE_LOG_{}",
            self.ks_level.0, self.ks_base_log.0
        )
    }
}

impl From<PBSParameters> for (ClientKey, ServerKey) {
    fn from(param: PBSParameters) -> Self {
        let param_set = ShortintParameterSet::from(param);
        param_set.into()
    }
}

impl From<ShortintParameterSet> for (ClientKey, ServerKey) {
    fn from(param: ShortintParameterSet) -> Self {
        let cks = ClientKey::new(param);
        let sks = ServerKey::new(&cks);
        (cks, sks)
    }
}

pub struct Keycache {
    inner: ImplKeyCache<PBSParameters, (ClientKey, ServerKey), FileStorage>,
}

impl Default for Keycache {
    fn default() -> Self {
        Self {
            inner: ImplKeyCache::new(FileStorage::new(
                "../keys/shortint/client_server".to_string(),
            )),
        }
    }
}

pub struct SharedKey {
    inner: GenericSharedKey<(ClientKey, ServerKey)>,
}

pub struct SharedWopbsKey {
    inner: GenericSharedKey<(ClientKey, ServerKey)>,
    wopbs: GenericSharedKey<WopbsKey>,
}

pub struct SharedKeySwitchingKey {
    inner_1: GenericSharedKey<(ClientKey, ServerKey)>,
    inner_2: GenericSharedKey<(ClientKey, ServerKey)>,
    ksk: GenericSharedKey<KeySwitchingKey>,
}

impl SharedKey {
    pub fn client_key(&self) -> &ClientKey {
        &self.inner.0
    }
    pub fn server_key(&self) -> &ServerKey {
        &self.inner.1
    }
}

impl SharedWopbsKey {
    pub fn client_key(&self) -> &ClientKey {
        &self.inner.0
    }
    pub fn server_key(&self) -> &ServerKey {
        &self.inner.1
    }
    pub fn wopbs_key(&self) -> &WopbsKey {
        &self.wopbs
    }
}

impl SharedKeySwitchingKey {
    pub fn client_key_1(&self) -> &ClientKey {
        &self.inner_1.0
    }
    pub fn server_key_1(&self) -> &ServerKey {
        &self.inner_1.1
    }
    pub fn client_key_2(&self) -> &ClientKey {
        &self.inner_2.0
    }
    pub fn server_key_2(&self) -> &ServerKey {
        &self.inner_2.1
    }
    pub fn key_switching_key(&self) -> &KeySwitchingKey {
        &self.ksk
    }
}

impl Keycache {
    pub fn get_from_param<P>(&self, param: P) -> SharedKey
    where
        P: Into<PBSParameters>,
    {
        SharedKey {
            inner: self.inner.get(param.into()),
        }
    }

    pub fn clear_in_memory_cache(&self) {
        self.inner.clear_in_memory_cache();
    }
}

#[derive(Copy, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WopbsParamPair(pub PBSParameters, pub WopbsParameters);

impl<P> From<(P, WopbsParameters)> for WopbsParamPair
where
    P: Into<PBSParameters>,
{
    fn from(tuple: (P, WopbsParameters)) -> Self {
        Self(tuple.0.into(), tuple.1)
    }
}

impl NamedParam for WopbsParamPair {
    fn name(&self) -> String {
        self.1.name()
    }
}

/// The KeyCache struct for shortint.
///
/// You should not create an instance yourself,
/// but rather use the global variable defined: [static@KEY_CACHE_WOPBS]
pub struct KeycacheWopbsV0 {
    inner: ImplKeyCache<WopbsParamPair, WopbsKey, FileStorage>,
}

impl Default for KeycacheWopbsV0 {
    fn default() -> Self {
        Self {
            inner: ImplKeyCache::new(FileStorage::new("../keys/shortint/wopbs_v0".to_string())),
        }
    }
}

impl KeycacheWopbsV0 {
    pub fn get_from_param<T: Into<WopbsParamPair>>(&self, params: T) -> SharedWopbsKey {
        let params = params.into();
        let key = KEY_CACHE.get_from_param(params.0);
        let wk = self.inner.get_with_closure(params, &mut |_| {
            WopbsKey::new_wopbs_key(&key.inner.0, &key.inner.1, &params.1)
        });
        SharedWopbsKey {
            inner: key.inner,
            wopbs: wk,
        }
    }

    pub fn clear_in_memory_cache(&self) {
        self.inner.clear_in_memory_cache();
    }
}

#[derive(Copy, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeySwitchingKeyParams(
    pub PBSParameters,
    pub PBSParameters,
    pub ShortintKeySwitchingParameters,
);

impl<P> From<(P, P, ShortintKeySwitchingParameters)> for KeySwitchingKeyParams
where
    P: Into<PBSParameters>,
{
    fn from(tuple: (P, P, ShortintKeySwitchingParameters)) -> Self {
        Self(tuple.0.into(), tuple.1.into(), tuple.2)
    }
}

impl NamedParam for KeySwitchingKeyParams {
    fn name(&self) -> String {
        format!("{}__{}__{}", self.0.name(), self.1.name(), self.2.name())
    }
}

/// The KeyCache struct for shortint.
///
/// You should not create an instance yourself,
/// but rather use the global variable defined: [static@KEY_CACHE_KSK]
pub struct KeycacheKeySwitchingKey {
    inner: ImplKeyCache<KeySwitchingKeyParams, KeySwitchingKey, FileStorage>,
}

impl Default for KeycacheKeySwitchingKey {
    fn default() -> Self {
        Self {
            inner: ImplKeyCache::new(FileStorage::new("../keys/shortint/ksk".to_string())),
        }
    }
}

impl KeycacheKeySwitchingKey {
    pub fn get_from_param<T: Into<KeySwitchingKeyParams>>(
        &self,
        params: T,
    ) -> SharedKeySwitchingKey {
        let params = params.into();
        let key_1 = KEY_CACHE.get_from_param(params.0);
        let key_2 = KEY_CACHE.get_from_param(params.1);
        let ksk = self.inner.get_with_closure(params, &mut |_| {
            KeySwitchingKey::new(
                (key_1.client_key(), key_1.server_key()),
                (key_2.client_key(), key_2.server_key()),
                params.2,
            )
        });
        SharedKeySwitchingKey {
            inner_1: key_1.inner,
            inner_2: key_2.inner,
            ksk,
        }
    }

    pub fn clear_in_memory_cache(&self) {
        self.inner.clear_in_memory_cache();
    }
}

lazy_static! {
    pub static ref KEY_CACHE: Keycache = Keycache::default();
    pub static ref KEY_CACHE_WOPBS: KeycacheWopbsV0 = KeycacheWopbsV0::default();
    pub static ref KEY_CACHE_KSK: KeycacheKeySwitchingKey = KeycacheKeySwitchingKey::default();
}
